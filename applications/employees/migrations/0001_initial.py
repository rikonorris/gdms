# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-08-16 20:24
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(error_messages={'unique': 'A user with that email already exists.'}, max_length=254, unique=True, verbose_name='email address')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(max_length=30, verbose_name='last name')),
                ('middle_name', models.CharField(max_length=64, verbose_name='middle name')),
                ('phone', models.CharField(max_length=64, verbose_name='user phone')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=30, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username. This value may contain only letters, numbers and @/./+/-/_ characters.', 'invalid')], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Користувач',
                'verbose_name_plural': 'Користувачі',
                'managed': True,
                'db_table': 'auth_user',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('dept_no', models.CharField(max_length=25, primary_key=True, serialize=False, verbose_name='code')),
                ('dept_name', models.CharField(max_length=150, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'department',
                'verbose_name_plural': 'departments',
                'db_table': 'departments',
                'ordering': ['dept_no'],
            },
        ),
        migrations.CreateModel(
            name='DeptEmp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_date', models.DateField(verbose_name='from')),
                ('to_date', models.DateField(verbose_name='to')),
                ('department', models.ForeignKey(db_column='dept_no', on_delete=django.db.models.deletion.CASCADE, to='employees.Department', verbose_name='department')),
                ('employee', models.ForeignKey(db_column='emp_no', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='employee')),
            ],
            options={
                'verbose_name': 'department employee',
                'verbose_name_plural': 'department employees',
                'db_table': 'dept_emp',
            },
        ),
        migrations.CreateModel(
            name='DeptManager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_date', models.DateField(verbose_name='from')),
                ('to_date', models.DateField(verbose_name='to')),
                ('department', models.ForeignKey(db_column='dept_no', on_delete=django.db.models.deletion.CASCADE, to='employees.Department', verbose_name='department')),
                ('employee', models.ForeignKey(db_column='emp_no', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='employee')),
            ],
            options={
                'verbose_name': 'department manager',
                'verbose_name_plural': 'department managers',
                'db_table': 'dept_manager',
                'ordering': ['-from_date'],
            },
        ),
        migrations.CreateModel(
            name='Title',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='title')),
                ('from_date', models.DateField(verbose_name='from')),
                ('to_date', models.DateField(blank=True, null=True, verbose_name='to')),
                ('employee', models.ForeignKey(db_column='emp_no', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='employee')),
            ],
            options={
                'verbose_name': 'title',
                'verbose_name_plural': 'titles',
                'db_table': 'titles',
            },
        ),
    ]
